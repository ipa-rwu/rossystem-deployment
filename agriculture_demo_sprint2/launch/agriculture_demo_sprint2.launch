<?xml version="1.0"?>
<launch>
<param name="/robot_description" value="<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/administrator/catkin_ws/src/jackal/jackal_description/urdf/jackal.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="jackal" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <link name="front_left_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="front_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_right_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 -0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="front_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_left_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="rear_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_right_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 -0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="rear_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="base_link"/>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>
  <link name="chassis_link">
    <visual>
      <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 -0.0655"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-base.stl"/>
      </geometry>
      <material name="dark_grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0.092"/>
      <geometry>
        <box size="0.42 0.31 0.184"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Center of mass -->
      <origin rpy="0 0 0" xyz="0.012  0.002 0.067"/>
      <mass value="16.523"/>
      <!-- Moments of inertia: ( chassis without wheels "/>
<param name="/jackal_joint_publisher/type" value="joint_state_controller/JointStateController"/>
<param name="/jackal_joint_publisher/publish_rate" value="50"/>
<rosparam param="list">[0.001,0.001,1000000.0,1000000.0,1000000.0,0.03]</rosparam>
<rosparam param="list">[front_right_wheel,rear_right_wheel]</rosparam>
<rosparam param="list">[0.001,0.001,0.001,1000000.0,1000000.0,0.03]</rosparam>
<param name="/jackal_velocity_controller/linear/x/max_velocity" value="2.0"/>
<param name="/jackal_velocity_controller/linear/x/has_acceleration_limits" value="true"/>
<param name="/jackal_velocity_controller/linear/x/has_velocity_limits" value="true"/>
<param name="/jackal_velocity_controller/linear/x/max_acceleration" value="20.0"/>
<param name="/jackal_velocity_controller/publish_rate" value="50.0"/>
<param name="/jackal_velocity_controller/wheel_radius_multiplier" value="1.0"/>
<rosparam param="list">[front_left_wheel,rear_left_wheel]</rosparam>
<param name="/jackal_velocity_controller/k_r" value="0.1"/>
<param name="/jackal_velocity_controller/wheel_separation_multiplier" value="1.5"/>
<param name="/jackal_velocity_controller/right_wheel_radius_multiplier" value="1.0"/>
<param name="/jackal_velocity_controller/enable_odom_tf" value="true"/>
<param name="/jackal_velocity_controller/k_l" value="0.1"/>
<param name="/jackal_velocity_controller/cmd_vel_timeout" value="0.25"/>
<param name="/jackal_velocity_controller/type" value="diff_drive_controller/DiffDriveController"/>
<param name="/jackal_velocity_controller/angular/z/max_velocity" value="4.0"/>
<param name="/jackal_velocity_controller/angular/z/has_acceleration_limits" value="true"/>
<param name="/jackal_velocity_controller/angular/z/has_velocity_limits" value="true"/>
<param name="/jackal_velocity_controller/angular/z/max_acceleration" value="25.0"/>
<param name="/jackal_velocity_controller/left_wheel_radius_multiplier" value="1.0"/>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" cwd="node" respawn="false" output="screen">
    <remap from='/jackal_velocity_controller/odom' to='jackal_velocity_controller/odom' />
    <param name="/ekf_localization/odom0" value="/jackal_velocity_controller/odom" />
    <param name="/ekf_localization/imu0" value="/imu/data" />
    <param name="/ekf_localization/odom0_config" value="[false,false,false,false,false,false,true,true,true,false,false,true,false,false,false]" />
    <param name="/ekf_localization/odom0_differential" value="false" />
    <param name="/ekf_localization/base_link_frame" value="base_link" />
    <param name="/ekf_localization/imu0_differential" value="false" />
    <param name="/ekf_localization/imu0_config" value="[false,false,false,true,true,true,false,false,false,true,true,true,false,false,false]" />
    <param name="/ekf_localization/frequency" value="50" />
    <param name="/ekf_localization/world_frame" value="odom" />
    <param name="/ekf_localization/odom_frame" value="odom" />
  </node>
  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_node" cwd="node" respawn="false" output="screen">
    <param name="mag_bias_z" value="0.0" />
    <param name="publish_tf" value="false" />
    <param name="orientation_stddev" value="0.0" />
    <param name="gain" value="0.1" />
    <param name="use_mag" value="false" />
    <param name="zeta" value="0.001" />
    <param name="use_magnetic_field_msg" value="false" />
    <param name="mag_bias_x" value="0.0" />
    <param name="mag_bias_y" value="0.0" />
  </node>
  <node pkg="jackal_base" type="jackal_node" name="jackal_node" cwd="node" respawn="false" output="screen">
    <remap from='jackal_velocity_controller/cmd_vel' to='cmd_vel' />
    <remap from='imu/data_raw' to='data' />
    <param name="jackal_node/require/publishers" value="[status,feedback,imu/data_raw,navsat/nmea_sentence]" />
    <param name="jackal_node/require/subscribers" value="[cmd_drive,wifi_connected]" />
    <param name="jackal_node/wireless_interface" value="wlp2s0" />
  </node>
  <node pkg="joy" type="joy_node" name="joy_node" ns="bluetooth_teleop" cwd="node" respawn="false" output="screen">
    <remap from='joy' to='/joy' />
    <param name="joy_node/dev" value="/dev/input/js0" />
    <param name="joy_node/deadzone" value="0.1" />
    <param name="joy_node/autorepeat_rate" value="20" />
  </node>
  <node pkg="lms1xx" type="LMS1xx_node" name="LMS1xx_node" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="interactive_marker_twist_server" type="marker_server" name="marker_server" ns="twist_marker_server" cwd="node" respawn="false" output="screen">
    <remap from='update_full' to='twist_marker_server/update_full' />
    <remap from='update' to='twist_marker_server/update' />
    <remap from='feedback' to='twist_marker_server/feedback' />
  </node>
  <node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="teleop_twist_joy" type="teleop_node" name="teleop" ns="bluetooth_teleop" cwd="node" respawn="false" output="screen">
    <remap from='joy' to='/joy' />
    <param name="teleop_twist_joy/enable_button" value="4" />
    <param name="teleop_twist_joy/scale_angular" value="1.4" />
    <param name="teleop_twist_joy/enable_turbo_button" value="5" />
    <param name="teleop_twist_joy/scale_linear" value="0.4" />
    <param name="teleop_twist_joy/scale_linear_turbo" value="1.0" />
    <param name="teleop_twist_joy/axis_angular" value="0" />
    <param name="teleop_twist_joy/axis_linear" value="1" />
  </node>
  <node pkg="twist_mux" type="twist_mux" name="twist_mux" cwd="node" respawn="false" output="screen">
    <remap from='cmd_vel' to='bluetooth_teleop/cmd_vel' />
    <remap from='cmd_vel' to='bluetooth_teleop/cmd_vel' />
    <remap from='cmd_vel' to='twist_marker_server/cmd_vel' />
    <rosparam>
/twist_mux/locks:
  topic: e_stop
  priority: 255
  name: e_stop
  timeout: 0.0
    </rosparam>
    <param name="/twist_mux/topics" value="]" />
  </node>

</launch>
