<?xml version="1.0"?>
<launch>
<param name="/robot_description" value="<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/administrator/catkin_ws/src/ipa_jackal_tools/jackal/jackal_description/urdf/jackal.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="jackal">
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material> 
  <material name="yellow"> 
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <link name="front_left_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="front_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_right_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 -0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="front_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_left_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="rear_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_right_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 -0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, its more
         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
  <transmission name="rear_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="base_link"/>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>
  <link name="chassis_link">
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 -0.0655"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-base.stl"/>
      </geometry>
      <material name="dark_grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0.092"/>
      <geometry>
        <box size="0.42 0.31 0.184"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Center of mass -->
      <origin rpy="0 0 0" xyz="0.012  0.002 0.067"/>
      <mass value="16.523"/>
      <!-- Moments of inertia: ( chassis without wheels "/>
<param name="/jackal_joint_publisher/type" value="joint_state_controller/JointStateController"/>
<param name="/jackal_joint_publisher/publish_rate" value="50"/>
<param name="/jackal_velocity_controller/type" value="diff_drive_controller/DiffDriveController"/>
<rosparam param="list">[front_left_wheel,rear_left_wheel]</rosparam>
<rosparam param="list">[front_right_wheel,rear_right_wheel]</rosparam>
<param name="/jackal_velocity_controller/publish_rate" value="50.0"/>
<rosparam param="list">[0.001,0.001,1000000.0,1000000.0,1000000.0,0.03]</rosparam>
<rosparam param="list">[0.001,0.001,0.001,1000000.0,1000000.0,0.03]</rosparam>
<param name="/jackal_velocity_controller/cmd_vel_timeout" value="0.25"/>
<param name="/jackal_velocity_controller/k_l" value="0.1"/>
<param name="/jackal_velocity_controller/k_r" value="0.1"/>
<param name="/jackal_velocity_controller/enable_odom_tf" value="true"/>
<param name="/jackal_velocity_controller/wheel_separation_multiplier" value="1.5"/>
<param name="/jackal_velocity_controller/wheel_radius_multiplier" value="1.0"/>
<param name="/jackal_velocity_controller/linear/x/has_velocity_limits" value="true"/>
<param name="/jackal_velocity_controller/linear/x/max_velocity" value="2.0"/>
<param name="/jackal_velocity_controller/linear/x/has_acceleration_limits" value="true"/>
<param name="/jackal_velocity_controller/linear/x/max_acceleration" value="20.0"/>
<param name="/jackal_velocity_controller/angular/z/has_velocity_limits" value="true"/>
<param name="/jackal_velocity_controller/angular/z/max_velocity" value="4.0"/>
<param name="/jackal_velocity_controller/angular/z/has_acceleration_limits" value="true"/>
<param name="/jackal_velocity_controller/angular/z/max_acceleration" value="25.0"/>
<param name="/jackal_velocity_controller/left_wheel_radius_multiplier" value="1.0"/>
<param name="/jackal_velocity_controller/right_wheel_radius_multiplier" value="1.0"/>

  <node pkg="joy" type="joy_node" name="joy_node" ns="bluetooth_teleop" cwd="node" respawn="false" output="screen">
    <remap from='diagnostics' to='bluetooth_teleop/diagnostics' />
    <remap from='joy/set_feedback' to='bluetooth_teleop/joy/set_feedback' />
  </node>
  <node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy" ns="bluetooth_teleop" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="controller_manager" type="spawner" name="controller_spawner" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" cwd="node" respawn="false" output="screen">
    <remap from='/diagnostics' to='diagnostics' />
  </node>
  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="jackal_base" type="jackal_node" name="jackal_node" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver" ns="navsat" cwd="node" respawn="false" output="screen">
    <remap from='time_reference' to='navsat/time_reference' />
    <remap from='vel' to='navsat/vel' />
    <remap from='fix' to='navsat/fix' />
    <remap from='error_statistics' to='navsat/error_statistics' />
    <remap from='heading' to='navsat/heading' />
    <remap from='heading_only' to='navsat/heading_only' />
    <remap from='info' to='navsat/info' />
    <remap from='orientation' to='navsat/orientation' />
  </node>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="rosserial_python" type="message_info_service" name="rosserial_message_info" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" cwd="node" respawn="false" output="screen">
  </node>
  <node pkg="twist_mux" type="twist_mux" name="twist_mux" cwd="node" respawn="false" output="screen">
  <rosparam>
/twist_mux/locks:
  topic: e_stop
  priority: 255
  name: e_stop
  timeout: 0.0
  </rosparam>
  <rosparam>
/twist_mux/topics:
- topic : joy_teleop/cmd_vel
  priority : 10
  name : joy
  timeout : 0.5
  - topic : bluetooth_teleop/cmd_vel
  priority : 9
  name : bt_joy
  timeout : 0.5
  - topic : twist_marker_server/cmd_vel
  priority : 8
  name : interactive_marker
  timeout : 0.5
  - topic : cmd_vel
  priority : 1
  name : external
  timeout : 0.5
  </rosparam>
  </node>

</launch>
