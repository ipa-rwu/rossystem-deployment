PackageSet {
  CatkinPackage gazebo_ros {
    Artifact /gazebo {
      Node { name /gazebo
        ServiceServers {
          ServiceServer { name '/gazebo/get_light_properties' service 'gazebo_msgs.GetLightProperties'},
          ServiceServer { name '/gazebo/apply_body_wrench' service 'gazebo_msgs.ApplyBodyWrench'},
          ServiceServer { name '/gazebo/get_link_state' service 'gazebo_msgs.GetLinkState'},
          ServiceServer { name '/gazebo/get_world_properties' service 'gazebo_msgs.GetWorldProperties'},
          ServiceServer { name '/gazebo/set_model_configuration' service 'gazebo_msgs.SetModelConfiguration'},
          ServiceServer { name '/gazebo/unpause_physics' service 'std_srvs.Empty'},
          ServiceServer { name '/gazebo/set_link_properties' service 'gazebo_msgs.SetLinkProperties'},
          ServiceServer { name '/gazebo/get_joint_properties' service 'gazebo_msgs.GetJointProperties'},
          ServiceServer { name '/gazebo/pause_physics' service 'std_srvs.Empty'},
          ServiceServer { name '/gazebo/set_model_state' service 'gazebo_msgs.SetModelState'},
          ServiceServer { name '/gazebo/set_link_state' service 'gazebo_msgs.SetLinkState'},
          ServiceServer { name '/gazebo/delete_light' service 'gazebo_msgs.DeleteLight'},
          ServiceServer { name '/gazebo/reset_simulation' service 'std_srvs.Empty'},
          ServiceServer { name '/gazebo/get_physics_properties' service 'gazebo_msgs.GetPhysicsProperties'},
          ServiceServer { name '/gazebo/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/gazebo/get_model_state' service 'gazebo_msgs.GetModelState'},
          ServiceServer { name '/gazebo/clear_joint_forces' service 'gazebo_msgs.JointRequest'},
          ServiceServer { name '/gazebo/set_light_properties' service 'gazebo_msgs.SetLightProperties'},
          ServiceServer { name '/gazebo/set_physics_properties' service 'gazebo_msgs.SetPhysicsProperties'},
          ServiceServer { name '/gazebo/get_model_properties' service 'gazebo_msgs.GetModelProperties'},
          ServiceServer { name '/gazebo/reset_world' service 'std_srvs.Empty'},
          ServiceServer { name '/gazebo/set_joint_properties' service 'gazebo_msgs.SetJointProperties'},
          ServiceServer { name '/gazebo/spawn_sdf_model' service 'gazebo_msgs.SpawnModel'},
          ServiceServer { name '/gazebo/get_link_properties' service 'gazebo_msgs.GetLinkProperties'},
          ServiceServer { name '/gazebo/clear_body_wrenches' service 'gazebo_msgs.BodyRequest'},
          ServiceServer { name '/gazebo/delete_model' service 'gazebo_msgs.DeleteModel'},
          ServiceServer { name '/gazebo/spawn_urdf_model' service 'gazebo_msgs.SpawnModel'},
          ServiceServer { name '/gazebo/apply_joint_effort' service 'gazebo_msgs.ApplyJointEffort'},
          ServiceServer { name '/imu_service' service 'std_srvs.Empty'}}
        Publishers {
          Publisher { name '/joint_states' message 'sensor_msgs.JointState'},
          Publisher { name '/gazebo/link_states' message 'gazebo_msgs.LinkStates'},
          Publisher { name '/gazebo/model_states' message 'gazebo_msgs.ModelStates'},
          Publisher { name '/scan' message 'sensor_msgs.LaserScan'},
          Publisher { name '/odom' message 'nav_msgs.Odometry'},
          Publisher { name '/gazebo/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/gazebo/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/imu' message 'sensor_msgs.Imu'}}
        Subscribers {
          Subscriber { name '/cmd_vel' message 'geometry_msgs.Twist'},
          Subscriber { name '/gazebo/set_model_state' message 'gazebo_msgs.ModelState'},
          Subscriber { name '/gazebo/set_link_state' message 'gazebo_msgs.LinkState'}}}},
     Artifact parameters_node {
      Node { name parameters_node
        Parameters {
          Parameter { name '/gazebo/gravity_z' type Double },
          Parameter { name '/gazebo/enable_ros_network' type Boolean },
          Parameter { name '/gazebo/contact_surface_layer' type Double },
          Parameter { name '/gazebo/auto_disable_bodies' type Boolean },
          Parameter { name '/gazebo/sor_pgs_w' type Double },
          Parameter { name '/gazebo/max_update_rate' type Double },
          Parameter { name '/gazebo/erp' type Double },
          Parameter { name '/gazebo/sor_pgs_rms_error_tol' type Double },
          Parameter { name '/gazebo/time_step' type Double },
          Parameter { name '/gazebo/cfm' type Double },
		  Parameter { name '/gazebo/max_contacts' type Integer },
          Parameter { name '/gazebo/contact_max_correcting_vel' type Double },
          Parameter { name '/gazebo/sor_pgs_iters' type Integer },
          Parameter { name '/gazebo/sor_pgs_precon_iters' type Integer },
          Parameter { name '/gazebo/gravity_x' type Double },
          Parameter { name '/robot_description' type String },
          Parameter { name '/gazebo/gravity_y' type Double }}}}
}}
