ComponentInterface { name demo
RosPublishers{
	RosPublisher "/odometry/filtered" { RefPublisher "robot_localization.ekf_localization_node.ekf_localization_node./odometry/filtered"},
	RosPublisher "/diagnostics" { RefPublisher "robot_localization.ekf_localization_node.ekf_localization_node./diagnostics"},
	RosPublisher "data" { RefPublisher "imu_filter_madgwick.imu_filter_node.imu_filter_node.data"},
	RosPublisher "parameter_descriptions" { RefPublisher "imu_filter_madgwick.imu_filter_node.imu_filter_node.parameter_descriptions"},
	RosPublisher "parameter_updates" { RefPublisher "imu_filter_madgwick.imu_filter_node.imu_filter_node.parameter_updates"},
	RosPublisher "feedback" { RefPublisher "jackal_base.jackal_node.jackal_node.feedback"},
	RosPublisher "diagnostics" { RefPublisher "jackal_base.jackal_node.jackal_node.diagnostics"},
	RosPublisher "joint_states" { RefPublisher "jackal_base.jackal_node.jackal_node.joint_states"},
	RosPublisher "navsat/nmea_sentence" { RefPublisher "jackal_base.jackal_node.jackal_node.navsat/nmea_sentence"},
	RosPublisher "jackal_velocity_controller/parameter_descriptions" { RefPublisher "jackal_base.jackal_node.jackal_node.jackal_velocity_controller/parameter_descriptions"},
	RosPublisher "imu/mag" { RefPublisher "jackal_base.jackal_node.jackal_node.imu/mag"},
	RosPublisher "imu/data_raw" { RefPublisher "jackal_base.jackal_node.jackal_node.imu/data_raw"},
	RosPublisher "jackal_velocity_controller/parameter_updates" { RefPublisher "jackal_base.jackal_node.jackal_node.jackal_velocity_controller/parameter_updates"},
	RosPublisher "jackal_velocity_controller/odom" { RefPublisher "jackal_base.jackal_node.jackal_node.jackal_velocity_controller/odom"},
	RosPublisher "joy" { RefPublisher "joy.joy_node.joy_node.joy"},
	RosPublisher "scan" { RefPublisher "lms1xx.LMS1xx_node.LMS1xx_node.scan"},
	RosPublisher "twist_marker_server/cmd_vel" { RefPublisher "interactive_marker_twist_server.marker_server.marker_server.cmd_vel"},
	RosPublisher "twist_marker_server/update_full" { RefPublisher "interactive_marker_twist_server.marker_server.marker_server.update_full"},
	RosPublisher "twist_marker_server/update" { RefPublisher "interactive_marker_twist_server.marker_server.marker_server.update"},
	RosPublisher "time_reference" { RefPublisher "nmea_navsat_driver.nmea_topic_driver.nmea_topic_driver.time_reference"},
	RosPublisher "vel" { RefPublisher "nmea_navsat_driver.nmea_topic_driver.nmea_topic_driver.vel"},
	RosPublisher "fix" { RefPublisher "nmea_navsat_driver.nmea_topic_driver.nmea_topic_driver.fix"},
	RosPublisher "bluetooth_teleop/cmd_vel" { RefPublisher "teleop_twist_joy.teleop_node.teleop_node.cmd_vel"},
	RosPublisher "cmd_vel" { RefPublisher "twist_mux.twist_mux.twist_mux.cmd_vel"}
	}
RosSubscribers{
	RosSubscriber "/jackal_velocity_controller/odom" { RefSubscriber "robot_localization.ekf_localization_node.ekf_localization_node./jackal_velocity_controller/odom"},
	RosSubscriber "/imu/data" { RefSubscriber "robot_localization.ekf_localization_node.ekf_localization_node./imu/data"},
	RosSubscriber "/set_pose" { RefSubscriber "robot_localization.ekf_localization_node.ekf_localization_node./set_pose"},
	RosSubscriber "data_raw" { RefSubscriber "imu_filter_madgwick.imu_filter_node.imu_filter_node.data_raw"},
	RosSubscriber "jackal_velocity_controller/cmd_vel" { RefSubscriber "jackal_base.jackal_node.jackal_node.jackal_velocity_controller/cmd_vel"},
	RosSubscriber "feedback" { RefSubscriber "jackal_base.jackal_node.jackal_node.feedback"},
	RosSubscriber "status" { RefSubscriber "jackal_base.jackal_node.jackal_node.status"},
	RosSubscriber "cmd_drive" { RefSubscriber "jackal_base.jackal_node.jackal_node.cmd_drive"},
	RosSubscriber "imu/data_raw" { RefSubscriber "jackal_base.jackal_node.jackal_node.imu/data_raw"},
	RosSubscriber "navsat/nmea_sentence" { RefSubscriber "jackal_base.jackal_node.jackal_node.navsat/nmea_sentence"},
	RosSubscriber "wifi_connected" { RefSubscriber "jackal_base.jackal_node.jackal_node.wifi_connected"},
	RosSubscriber "joy/set_feedback" { RefSubscriber "joy.joy_node.joy_node.joy/set_feedback"},
	RosSubscriber "twist_marker_server/feedback" { RefSubscriber "interactive_marker_twist_server.marker_server.marker_server.feedback"},
	RosSubscriber "nmea_sentence" { RefSubscriber "nmea_navsat_driver.nmea_topic_driver.nmea_topic_driver.nmea_sentence"},
	RosSubscriber "joint_states" { RefSubscriber "robot_state_publisher.robot_state_publisher.robot_state_publisher.joint_states"},
	RosSubscriber "bluetooth_teleop/joy" { RefSubscriber "teleop_twist_joy.teleop_node.teleop_node.joy"},
	RosSubscriber "bluetooth_teleop/cmd_vel" { RefSubscriber "twist_mux.twist_mux.twist_mux.cmd_vel"},
	RosSubscriber "joy_teleop/cmd_vel" { RefSubscriber "twist_mux.twist_mux.twist_mux.cmd_vel"},
	RosSubscriber "twist_marker_server/cmd_vel" { RefSubscriber "twist_mux.twist_mux.twist_mux.cmd_vel"},
	RosSubscriber "e_stop" { RefSubscriber "twist_mux.twist_mux.twist_mux.e_stop"},
	RosSubscriber "cmd_vel" { RefSubscriber "twist_mux.twist_mux.twist_mux.cmd_vel"}
	}
RosSrvServers{
	RosServiceServer "/ekf_localization/enable" { RefServer "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/enable"},
	RosServiceServer "/set_pose" { RefServer "robot_localization.ekf_localization_node.ekf_localization_node./set_pose"},
	RosServiceServer "/ekf_localization/toggle" { RefServer "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/toggle"},
	RosServiceServer "set_parameters" { RefServer "imu_filter_madgwick.imu_filter_node.imu_filter_node.set_parameters"},
	RosServiceServer "controller_manager/reload_controller_libraries" { RefServer "jackal_base.jackal_node.jackal_node.controller_manager/reload_controller_libraries"},
	RosServiceServer "controller_manager/load_controller" { RefServer "jackal_base.jackal_node.jackal_node.controller_manager/load_controller"},
	RosServiceServer "controller_manager/switch_controller" { RefServer "jackal_base.jackal_node.jackal_node.controller_manager/switch_controller"},
	RosServiceServer "jackal_velocity_controller/set_parameters" { RefServer "jackal_base.jackal_node.jackal_node.jackal_velocity_controller/set_parameters"},
	RosServiceServer "controller_manager/list_controllers" { RefServer "jackal_base.jackal_node.jackal_node.controller_manager/list_controllers"},
	RosServiceServer "controller_manager/list_controller_types" { RefServer "jackal_base.jackal_node.jackal_node.controller_manager/list_controller_types"},
	RosServiceServer "controller_manager/unload_controller" { RefServer "jackal_base.jackal_node.jackal_node.controller_manager/unload_controller"}
	}
RosParameters{
	RosParameter "/ekf_localization/odom0" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/odom0" value /jackal_velocity_controller/odom },
	RosParameter "/ekf_localization/imu0" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/imu0" value /imu/data },
	RosParameter "/ekf_localization/odom0_config" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/odom0_config" value {false,false,false,false,false,false,true,true,true,false,false,true,false,false,false} },
	RosParameter "/ekf_localization/odom0_differential" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/odom0_differential" value false },
	RosParameter "/ekf_localization/base_link_frame" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/base_link_frame" value base_link },
	RosParameter "/ekf_localization/imu0_differential" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/imu0_differential" value false },
	RosParameter "/ekf_localization/imu0_config" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/imu0_config" value {false,false,false,true,true,true,false,false,false,true,true,true,false,false,false} },
	RosParameter "/ekf_localization/frequency" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/frequency" value 50 },
	RosParameter "/ekf_localization/world_frame" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/world_frame" value odom },
	RosParameter "/ekf_localization/odom_frame" { RefParameter "robot_localization.ekf_localization_node.ekf_localization_node./ekf_localization/odom_frame" value odom },
	RosParameter "mag_bias_z" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.mag_bias_z" value 0.0 },
	RosParameter "publish_tf" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.publish_tf" value false },
	RosParameter "orientation_stddev" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.orientation_stddev" value 0.0 },
	RosParameter "gain" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.gain" value 0.1 },
	RosParameter "use_mag" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.use_mag" value false },
	RosParameter "zeta" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.zeta" value 0.001 },
	RosParameter "use_magnetic_field_msg" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.use_magnetic_field_msg" value false },
	RosParameter "mag_bias_x" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.mag_bias_x" value 0.0 },
	RosParameter "mag_bias_y" { RefParameter "imu_filter_madgwick.imu_filter_node.imu_filter_node.mag_bias_y" value 0.0 },
	RosParameter "jackal_node/require/publishers" { RefParameter "jackal_base.jackal_node.jackal_node.jackal_node/require/publishers" value {status,feedback,imu/data_raw,navsat/nmea_sentence} },
	RosParameter "jackal_node/require/subscribers" { RefParameter "jackal_base.jackal_node.jackal_node.jackal_node/require/subscribers" value {cmd_drive,wifi_connected} },
	RosParameter "jackal_node/wireless_interface" { RefParameter "jackal_base.jackal_node.jackal_node.jackal_node/wireless_interface" value wlp2s0 },
	RosParameter "joy_node/dev" { RefParameter "joy.joy_node.joy_node.joy_node/dev" value /dev/input/js0 },
	RosParameter "joy_node/deadzone" { RefParameter "joy.joy_node.joy_node.joy_node/deadzone" value 0.1 },
	RosParameter "joy_node/autorepeat_rate" { RefParameter "joy.joy_node.joy_node.joy_node/autorepeat_rate" value 20 },
	RosParameter "port" { RefParameter "lms1xx.LMS1xx_node.LMS1xx_node.port" },
	RosParameter "host" { RefParameter "lms1xx.LMS1xx_node.LMS1xx_node.host" },
	RosParameter "publish_min_range_as_inf" { RefParameter "lms1xx.LMS1xx_node.LMS1xx_node.publish_min_range_as_inf" },
	RosParameter "frame_id" { RefParameter "lms1xx.LMS1xx_node.LMS1xx_node.frame_id" },
	RosParameter "teleop_twist_joy/enable_button" { RefParameter "teleop_twist_joy.teleop_node.teleop_node.teleop_twist_joy/enable_button" value 4 },
	RosParameter "teleop_twist_joy/scale_angular" { RefParameter "teleop_twist_joy.teleop_node.teleop_node.teleop_twist_joy/scale_angular" value 1.4 },
	RosParameter "teleop_twist_joy/enable_turbo_button" { RefParameter "teleop_twist_joy.teleop_node.teleop_node.teleop_twist_joy/enable_turbo_button" value 5 },
	RosParameter "teleop_twist_joy/scale_linear" { RefParameter "teleop_twist_joy.teleop_node.teleop_node.teleop_twist_joy/scale_linear" value 0.4 },
	RosParameter "teleop_twist_joy/scale_linear_turbo" { RefParameter "teleop_twist_joy.teleop_node.teleop_node.teleop_twist_joy/scale_linear_turbo" value 1.0 },
	RosParameter "teleop_twist_joy/axis_angular" { RefParameter "teleop_twist_joy.teleop_node.teleop_node.teleop_twist_joy/axis_angular" value 0 },
	RosParameter "teleop_twist_joy/axis_linear" { RefParameter "teleop_twist_joy.teleop_node.teleop_node.teleop_twist_joy/axis_linear" value 1 },
	RosParameter "/twist_mux/locks" { RefParameter "twist_mux.twist_mux.twist_mux./twist_mux/locks" value {
	          { topic { value e_stop }},
	          { priority { value 255 }},
	          { name { value e_stop }},
	          { timeout { value 0.0 }}} },
	RosParameter "/twist_mux/topics" { RefParameter "twist_mux.twist_mux.twist_mux./twist_mux/topics" value {,,,} },
	RosParameter "/robot_description" { RefParameter "/robot_description" value <?xml version="1.0" ?>
	<!-- =================================================================================== -->
	<!-- |    This document was autogenerated by xacro from /home/administrator/catkin_ws/src/jackal/jackal_description/urdf/jackal.urdf.xacro | -->
	<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
	<!-- =================================================================================== -->
	<robot name="jackal" xmlns:xacro="http://www.ros.org/wiki/xacro">
	  <material name="dark_grey">
	    <color rgba="0.2 0.2 0.2 1.0"/>
	  </material>
	  <material name="light_grey">
	    <color rgba="0.4 0.4 0.4 1.0"/>
	  </material>
	  <material name="yellow">
	    <color rgba="0.8 0.8 0.0 1.0"/>
	  </material>
	  <material name="black">
	    <color rgba="0.15 0.15 0.15 1.0"/>
	  </material>
	  <link name="front_left_wheel_link">
	    <visual>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
	      </geometry>
	      <material name="black"/>
	    </visual>
	    <collision>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <cylinder length="0.04" radius="0.098"/>
	      </geometry>
	    </collision>
	    <inertial>
	      <origin rpy="0 0 0" xyz="0 0 0"/>
	      <mass value="0.477"/>
	      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
	    </inertial>
	  </link>
	  <gazebo reference="front_left_wheel_link">
	    <material>Gazebo/DarkGrey</material>
	    <selfCollide>false</selfCollide>
	    <mu1 value="0.5"/>
	    <mu2 value="0.5"/>
	    <kp value="10000000.0"/>
	    <kd value="1"/>
	    <fdir1 value="1 0 0"/>
	  </gazebo>
	  <joint name="front_left_wheel" type="continuous">
	    <parent link="chassis_link"/>
	    <child link="front_left_wheel_link"/>
	    <origin rpy="0 0 0" xyz="0.131 0.187795 0.0345"/>
	    <axis xyz="0 1 0"/>
	  </joint>
	  <!-- In reality, Jackal has only two motors, one per side. However, its more
	         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
	  <transmission name="front_left_wheel_trans">
	    <type>transmission_interface/SimpleTransmission</type>
	    <joint name="front_left_wheel">
	      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
	    </joint>
	    <actuator name="front_left_actuator">
	      <mechanicalReduction>1</mechanicalReduction>
	    </actuator>
	  </transmission>
	  <link name="front_right_wheel_link">
	    <visual>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
	      </geometry>
	      <material name="black"/>
	    </visual>
	    <collision>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <cylinder length="0.04" radius="0.098"/>
	      </geometry>
	    </collision>
	    <inertial>
	      <origin rpy="0 0 0" xyz="0 0 0"/>
	      <mass value="0.477"/>
	      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
	    </inertial>
	  </link>
	  <gazebo reference="front_right_wheel_link">
	    <material>Gazebo/DarkGrey</material>
	    <selfCollide>false</selfCollide>
	    <mu1 value="0.5"/>
	    <mu2 value="0.5"/>
	    <kp value="10000000.0"/>
	    <kd value="1"/>
	    <fdir1 value="1 0 0"/>
	  </gazebo>
	  <joint name="front_right_wheel" type="continuous">
	    <parent link="chassis_link"/>
	    <child link="front_right_wheel_link"/>
	    <origin rpy="0 0 0" xyz="0.131 -0.187795 0.0345"/>
	    <axis xyz="0 1 0"/>
	  </joint>
	  <!-- In reality, Jackal has only two motors, one per side. However, its more
	         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
	  <transmission name="front_right_wheel_trans">
	    <type>transmission_interface/SimpleTransmission</type>
	    <joint name="front_right_wheel">
	      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
	    </joint>
	    <actuator name="front_right_actuator">
	      <mechanicalReduction>1</mechanicalReduction>
	    </actuator>
	  </transmission>
	  <link name="rear_left_wheel_link">
	    <visual>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
	      </geometry>
	      <material name="black"/>
	    </visual>
	    <collision>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <cylinder length="0.04" radius="0.098"/>
	      </geometry>
	    </collision>
	    <inertial>
	      <origin rpy="0 0 0" xyz="0 0 0"/>
	      <mass value="0.477"/>
	      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
	    </inertial>
	  </link>
	  <gazebo reference="rear_left_wheel_link">
	    <material>Gazebo/DarkGrey</material>
	    <selfCollide>false</selfCollide>
	    <mu1 value="0.5"/>
	    <mu2 value="0.5"/>
	    <kp value="10000000.0"/>
	    <kd value="1"/>
	    <fdir1 value="1 0 0"/>
	  </gazebo>
	  <joint name="rear_left_wheel" type="continuous">
	    <parent link="chassis_link"/>
	    <child link="rear_left_wheel_link"/>
	    <origin rpy="0 0 0" xyz="-0.131 0.187795 0.0345"/>
	    <axis xyz="0 1 0"/>
	  </joint>
	  <!-- In reality, Jackal has only two motors, one per side. However, its more
	         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
	  <transmission name="rear_left_wheel_trans">
	    <type>transmission_interface/SimpleTransmission</type>
	    <joint name="rear_left_wheel">
	      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
	    </joint>
	    <actuator name="rear_left_actuator">
	      <mechanicalReduction>1</mechanicalReduction>
	    </actuator>
	  </transmission>
	  <link name="rear_right_wheel_link">
	    <visual>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
	      </geometry>
	      <material name="black"/>
	    </visual>
	    <collision>
	      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
	      <geometry>
	        <cylinder length="0.04" radius="0.098"/>
	      </geometry>
	    </collision>
	    <inertial>
	      <origin rpy="0 0 0" xyz="0 0 0"/>
	      <mass value="0.477"/>
	      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
	    </inertial>
	  </link>
	  <gazebo reference="rear_right_wheel_link">
	    <material>Gazebo/DarkGrey</material>
	    <selfCollide>false</selfCollide>
	    <mu1 value="0.5"/>
	    <mu2 value="0.5"/>
	    <kp value="10000000.0"/>
	    <kd value="1"/>
	    <fdir1 value="1 0 0"/>
	  </gazebo>
	  <joint name="rear_right_wheel" type="continuous">
	    <parent link="chassis_link"/>
	    <child link="rear_right_wheel_link"/>
	    <origin rpy="0 0 0" xyz="-0.131 -0.187795 0.0345"/>
	    <axis xyz="0 1 0"/>
	  </joint>
	  <!-- In reality, Jackal has only two motors, one per side. However, its more
	         straightforward for Gazebo to simulate as if theres an actuator per wheel. -->
	  <transmission name="rear_right_wheel_trans">
	    <type>transmission_interface/SimpleTransmission</type>
	    <joint name="rear_right_wheel">
	      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
	    </joint>
	    <actuator name="rear_right_actuator">
	      <mechanicalReduction>1</mechanicalReduction>
	    </actuator>
	  </transmission>
	  <link name="base_link"/>
	  <joint name="base_link_joint" type="fixed">
	    <origin rpy="0 0 0" xyz="0 0 0"/>
	    <parent link="base_link"/>
	    <child link="chassis_link"/>
	  </joint>
	  <link name="chassis_link">
	    <visual>
	      <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 -0.0655"/>
	      <geometry>
	        <mesh filename="package://jackal_description/meshes/jackal-base.stl"/>
	      </geometry>
	      <material name="dark_grey"/>
	    </visual>
	    <collision>
	      <origin xyz="0 0 0.092"/>
	      <geometry>
	        <box size="0.42 0.31 0.184"/>
	      </geometry>
	    </collision>
	    <inertial>
	      <!-- Center of mass -->
	      <origin rpy="0 0 0" xyz="0.012  0.002 0.067"/>
	      <mass value="16.523"/>
	      <!-- Moments of inertia: ( chassis without wheels  },
	RosParameter "/jackal_joint_publisher/type" { RefParameter "/jackal_joint_publisher/type" value joint_state_controller/JointStateController },
	RosParameter "/jackal_joint_publisher/publish_rate" { RefParameter "/jackal_joint_publisher/publish_rate" value 50 },
	RosParameter "/jackal_velocity_controller/pose_covariance_diagonal" { RefParameter "/jackal_velocity_controller/pose_covariance_diagonal" value {0.001,0.001,1000000.0,1000000.0,1000000.0,0.03} },
	RosParameter "/jackal_velocity_controller/right_wheel" { RefParameter "/jackal_velocity_controller/right_wheel" value {front_right_wheel,rear_right_wheel} },
	RosParameter "/jackal_velocity_controller/twist_covariance_diagonal" { RefParameter "/jackal_velocity_controller/twist_covariance_diagonal" value {0.001,0.001,0.001,1000000.0,1000000.0,0.03} },
	RosParameter "/jackal_velocity_controller/linear/x/max_velocity" { RefParameter "/jackal_velocity_controller/linear/x/max_velocity" value 2.0 },
	RosParameter "/jackal_velocity_controller/linear/x/has_acceleration_limits" { RefParameter "/jackal_velocity_controller/linear/x/has_acceleration_limits" value true },
	RosParameter "/jackal_velocity_controller/linear/x/has_velocity_limits" { RefParameter "/jackal_velocity_controller/linear/x/has_velocity_limits" value true },
	RosParameter "/jackal_velocity_controller/linear/x/max_acceleration" { RefParameter "/jackal_velocity_controller/linear/x/max_acceleration" value 20.0 },
	RosParameter "/jackal_velocity_controller/publish_rate" { RefParameter "/jackal_velocity_controller/publish_rate" value 50.0 },
	RosParameter "/jackal_velocity_controller/wheel_radius_multiplier" { RefParameter "/jackal_velocity_controller/wheel_radius_multiplier" value 1.0 },
	RosParameter "/jackal_velocity_controller/left_wheel" { RefParameter "/jackal_velocity_controller/left_wheel" value {front_left_wheel,rear_left_wheel} },
	RosParameter "/jackal_velocity_controller/k_r" { RefParameter "/jackal_velocity_controller/k_r" value 0.1 },
	RosParameter "/jackal_velocity_controller/wheel_separation_multiplier" { RefParameter "/jackal_velocity_controller/wheel_separation_multiplier" value 1.5 },
	RosParameter "/jackal_velocity_controller/right_wheel_radius_multiplier" { RefParameter "/jackal_velocity_controller/right_wheel_radius_multiplier" value 1.0 },
	RosParameter "/jackal_velocity_controller/enable_odom_tf" { RefParameter "/jackal_velocity_controller/enable_odom_tf" value true },
	RosParameter "/jackal_velocity_controller/k_l" { RefParameter "/jackal_velocity_controller/k_l" value 0.1 },
	RosParameter "/jackal_velocity_controller/cmd_vel_timeout" { RefParameter "/jackal_velocity_controller/cmd_vel_timeout" value 0.25 },
	RosParameter "/jackal_velocity_controller/type" { RefParameter "/jackal_velocity_controller/type" value diff_drive_controller/DiffDriveController },
	RosParameter "/jackal_velocity_controller/angular/z/max_velocity" { RefParameter "/jackal_velocity_controller/angular/z/max_velocity" value 4.0 },
	RosParameter "/jackal_velocity_controller/angular/z/has_acceleration_limits" { RefParameter "/jackal_velocity_controller/angular/z/has_acceleration_limits" value true },
	RosParameter "/jackal_velocity_controller/angular/z/has_velocity_limits" { RefParameter "/jackal_velocity_controller/angular/z/has_velocity_limits" value true },
	RosParameter "/jackal_velocity_controller/angular/z/max_acceleration" { RefParameter "/jackal_velocity_controller/angular/z/max_acceleration" value 25.0 },
	RosParameter "/jackal_velocity_controller/left_wheel_radius_multiplier" { RefParameter "/jackal_velocity_controller/left_wheel_radius_multiplier" value 1.0 }
	}
}
